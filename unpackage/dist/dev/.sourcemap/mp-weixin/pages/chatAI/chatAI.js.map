{"version":3,"file":"chatAI.js","sources":["pages/chatAI/chatAI.vue","../../HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvY2hhdEFJL2NoYXRBSS52dWU"],"sourcesContent":["<template>\n\t<view class=\"chat-container\">\n\n\t\t\n\t\t<!-- 顶部标题栏 -->\n\t\t<view class=\"header\">\n\t\t\t<view class=\"header-left\">\n\t\t\t\t<view class=\"header-btn\" @tap=\"showHistorySidebar\">\n\t\t\t\t\t<view class=\"hamburger-icon\">\n\t\t\t\t\t\t<view class=\"line\"></view>\n\t\t\t\t\t\t<view class=\"line\"></view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t<view class=\"header-center\">\n\t\t\t\t<text class=\"title\">智慧害虫AI问答助手</text>\n\t\t\t</view>\n\t\t\t<view class=\"header-right\">\n\t\t\t\t<view class=\"header-btn\" @tap=\"createNewChat\">\n\t\t\t\t\t<text class=\"header-icon\">+</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- 搜索栏 -->\n\t\t<view class=\"search-container\">\n\t\t\t<view class=\"search-box\">\n\t\t\t\t<view class=\"search-icon\">🔍</view>\n\t\t\t\t<input \n\t\t\t\t\tclass=\"search-input\" \n\t\t\t\t\tv-model=\"searchKeyword\" \n\t\t\t\t\tplaceholder=\"搜索对话内容...\"\n\t\t\t\t\t@input=\"onSearchInput\"\n\t\t\t\t\t@confirm=\"performSearch\"\n\t\t\t\t/>\n\t\t\t\t<view v-if=\"searchKeyword\" class=\"clear-btn\" @tap=\"clearSearch\">\n\t\t\t\t\t<text class=\"clear-icon\">×</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- 聊天消息列表 -->\n\t\t<scroll-view \n\t\t\tclass=\"chat-list\" \n\t\t\tscroll-y=\"true\" \n\t\t\t:scroll-top=\"scrollTop\"\n\t\t\t:scroll-into-view=\"scrollIntoView\"\n\t\t\t:show-scrollbar=\"false\"\n\t\t>\n\t\t\t<!-- 欢迎界面 -->\n\t\t\t<view v-if=\"messageList.length === 0\" class=\"welcome-container\">\n\t\t\t\t<view class=\"welcome-content\">\n\t\t\t\t\t<text class=\"welcome-title\">欢迎使用智慧害虫AI问答助手</text>\n\t\t\t\t\t<text class=\"welcome-subtitle\">我可以帮您识别各种害虫并提供专业建议</text>\n\t\t\t\t\t<view class=\"welcome-features\">\n\t\t\t\t\t\t<view class=\"feature-item\">\n\t\t\t\t\t\t\t<text class=\"feature-text\">智能识别害虫</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"feature-item\">\n\t\t\t\t\t\t\t<text class=\"feature-text\">专业防治建议</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"feature-item\">\n\t\t\t\t\t\t\t<text class=\"feature-text\">拍照上传识别</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<view \n\t\t\t\tv-for=\"(message, index) in messageList\" \n\t\t\t\t:key=\"index\"\n\t\t\t\t:class=\"['message-item', message.type === 'user' ? 'user-message' : 'ai-message', isMessageHighlighted(message) ? 'highlighted-message' : '']\"\n\t\t\t\t:id=\"'msg-' + index\"\n\t\t\t>\n\t\t\t\t<view class=\"message-content\">\n\t\t\t\t\t<view class=\"avatar\">\n\t\t\t\t\t\t<image \n\t\t\t\t\t\t\t:src=\"message.type === 'user' ? userAvatar : aiAvatar\" \n\t\t\t\t\t\t\tclass=\"avatar-img\"\n\t\t\t\t\t\t></image>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"message-bubble\">\n\t\t\t\t\t\t<text v-if=\"!message.image\" class=\"message-text\">{{ message.content }}</text>\n\t\t\t\t\t\t<image v-if=\"message.image\" :src=\"message.image\" class=\"message-image\" mode=\"aspectFit\"></image>\n\t\t\t\t\t\t<text class=\"message-time\">{{ message.time }}</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 加载状态 -->\n\t\t\t<view v-if=\"isLoading\" class=\"loading-message\">\n\t\t\t\t<view class=\"message-content\">\n\t\t\t\t\t<view class=\"avatar\">\n\t\t\t\t\t\t<image :src=\"aiAvatar\" class=\"avatar-img\"></image>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"message-bubble\">\n\t\t\t\t\t\t<view class=\"typing-indicator\">\n\t\t\t\t\t\t\t<view class=\"dot\"></view>\n\t\t\t\t\t\t\t<view class=\"dot\"></view>\n\t\t\t\t\t\t\t<view class=\"dot\"></view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</scroll-view>\n\t\t\n\t\t<!-- 底部输入区域 -->\n\t\t<view class=\"input-area\">\n\t\t\t<view class=\"input-container\">\n\t\t\t\t<button \n\t\t\t\t\tclass=\"plus-btn\" \n\t\t\t\t\t@tap=\"showImageOptions\"\n\t\t\t\t\t:disabled=\"isLoading\"\n\t\t\t\t>\n\t\t\t\t\t<text class=\"plus-icon\">+</text>\n\t\t\t\t</button>\n\t\t\t\t<input \n\t\t\t\t\tclass=\"message-input\" \n\t\t\t\t\tv-model=\"inputMessage\" \n\t\t\t\t\tplaceholder=\"请输入您的问题...\"\n\t\t\t\t\t:disabled=\"isLoading\"\n\t\t\t\t\t@confirm=\"sendMessage\"\n\t\t\t\t/>\n\t\t\t\t<button \n\t\t\t\t\tclass=\"send-btn\" \n\t\t\t\t\t:disabled=\"!inputMessage.trim() || isLoading\"\n\t\t\t\t\t@tap=\"sendMessage\"\n\t\t\t\t>\n\t\t\t\t\t发送\n\t\t\t\t</button>\n\t\t\t</view>\n\t\t</view>\n\t</view>\n</template>\n\n<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tmessageList: [], // 消息列表\n\t\t\t\tinputMessage: '', // 输入框内容\n\t\t\t\tisLoading: false, // 是否正在加载\n\t\t\t\tscrollTop: 0, // 滚动位置\n\t\t\t\tscrollIntoView: '', // 滚动到指定消息\n\t\t\t\tuserAvatar: '/static/logo.png', // 用户头像\n\t\t\t\taiAvatar: '/static/logo.png', // AI头像\n\t\t\t\tcurrentChatId: null, // 当前对话ID\n\t\t\t\thistoryChats: [], // 历史对话列表\n\t\t\t\tsearchKeyword: '', // 搜索关键词\n\t\t\t\tsearchResults: [], // 搜索结果\n\t\t\t}\n\t\t},\n\t\tonLoad() {\n\t\t\t// 页面加载时初始化新对话状态\n\t\t\tthis.messageList = [];\n\t\t\tthis.currentChatId = 'chat' + Date.now();\n\t\t\tthis.inputMessage = '';\n\t\t},\n\t\tonShow() {\n\t\t\t// 检查是否有从历史页面传递过来的对话数据\n\t\t\tconst selectedChat = uni.getStorageSync('selectedChat');\n\t\t\tif (selectedChat) {\n\t\t\t\tconsole.log('检测到历史对话数据:', selectedChat);\n\t\t\t\tthis.loadChat(selectedChat);\n\t\t\t\tuni.removeStorageSync('selectedChat');\n\t\t\t} else {\n\t\t\t\t// 如果没有选择历史对话，确保是新的对话状态\n\t\t\t\tif (this.messageList.length === 0) {\n\t\t\t\t\tthis.currentChatId = 'chat' + Date.now();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\tonHide() {\n\t\t\t// 页面隐藏时保存当前对话\n\t\t\tif (this.messageList.length > 0) {\n\t\t\t\tthis.saveCurrentChat();\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\t// 显示历史侧边栏\n\t\t\tshowHistorySidebar() {\n\t\t\t\tconsole.log('showHistorySidebar 被调用');\n\t\t\t\t// 跳转到历史页面\n\t\t\t\tuni.navigateTo({\n\t\t\t\t\turl: '/pages/chatAI/history'\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t// 加载指定对话\n\t\t\tloadChat(chat) {\n\t\t\t\tconsole.log('加载历史对话:', chat);\n\t\t\t\tthis.currentChatId = chat.id;\n\t\t\t\tthis.messageList = [...chat.messages];\n\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t// 延迟滚动确保DOM完全渲染\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.scrollToBottom();\n\t\t\t\t\t}, 100);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// 显示加载成功提示\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '对话加载成功',\n\t\t\t\t\ticon: 'success',\n\t\t\t\t\tduration: 1500\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t// 显示历史对话列表\n\t\t\tshowHistory() {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '历史对话功能开发中',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t});\n\t\t\t\t// 这里可以跳转到历史对话页面或显示历史对话列表\n\t\t\t},\n\t\t\t\n\t\t\t// 创建新对话\n\t\t\tcreateNewChat() {\n\t\t\t\t// 如果当前有对话内容，询问是否保存\n\t\t\t\tif (this.messageList.length > 0) {\n\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\ttitle: '创建新对话',\n\t\t\t\t\t\tcontent: '确定要开始新的对话吗？当前对话将被保存。',\n\t\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\t\t// 保存当前对话到历史记录\n\t\t\t\t\t\t\t\tthis.saveCurrentChat();\n\t\t\t\t\t\t\t\tthis.resetToNewChat();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// 如果当前没有对话内容，直接创建新对话\n\t\t\t\t\tthis.resetToNewChat();\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 重置为新对话\n\t\t\tresetToNewChat() {\n\t\t\t\tthis.messageList = [];\n\t\t\t\t// 生成新的对话ID，避免重复\n\t\t\t\tthis.currentChatId = 'chat' + Date.now();\n\t\t\t\tthis.inputMessage = '';\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '已创建新对话',\n\t\t\t\t\ticon: 'success'\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t// 保存当前对话\n\t\t\tsaveCurrentChat() {\n\t\t\t\tif (this.messageList.length === 0) return;\n\t\t\t\t\n\t\t\t\t// 获取对话标题（使用第一条用户消息）\n\t\t\t\tconst userMessages = this.messageList.filter(msg => msg.type === 'user');\n\t\t\t\tlet title = '新对话';\n\t\t\t\tif (userMessages.length > 0) {\n\t\t\t\t\tconst firstUserMessage = userMessages[0];\n\t\t\t\t\ttitle = firstUserMessage.content.length > 20 \n\t\t\t\t\t\t? firstUserMessage.content.substring(0, 20) + '...' \n\t\t\t\t\t\t: firstUserMessage.content;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 确保有唯一的对话ID\n\t\t\t\tconst chatId = this.currentChatId || 'chat' + Date.now();\n\t\t\t\t\n\t\t\t\tlet historyChats = uni.getStorageSync('historyChats') || [];\n\t\t\t\tconst existingChat = historyChats.find(chat => chat.id === chatId);\n\t\t\t\t\n\t\t\t\t// 检查是否有新消息\n\t\t\t\tlet hasNewMessages = false;\n\t\t\t\tlet lastTime = this.getCurrentDateTime();\n\t\t\t\t\n\t\t\t\tif (existingChat) {\n\t\t\t\t\t// 如果对话已存在，检查消息数量是否增加\n\t\t\t\t\tif (this.messageList.length > existingChat.messages.length) {\n\t\t\t\t\t\thasNewMessages = true;\n\t\t\t\t\t\tlastTime = this.getCurrentDateTime(); // 有新消息时更新时间\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 没有新消息，保持原时间\n\t\t\t\t\t\tlastTime = existingChat.lastTime;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// 新对话，使用当前时间\n\t\t\t\t\thasNewMessages = true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst newChat = {\n\t\t\t\t\tid: chatId,\n\t\t\t\t\ttitle: title,\n\t\t\t\t\tlastTime: lastTime,\n\t\t\t\t\tmessages: [...this.messageList]\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tconst existingIndex = historyChats.findIndex(chat => chat.id === chatId);\n\t\t\t\t\n\t\t\t\tif (existingIndex >= 0) {\n\t\t\t\t\t// 更新现有对话\n\t\t\t\t\thistoryChats[existingIndex] = newChat;\n\t\t\t\t\t\n\t\t\t\t\t// 只有在有新消息时才重新排序\n\t\t\t\t\tif (hasNewMessages) {\n\t\t\t\t\t\t// 将更新的对话移到最前面\n\t\t\t\t\t\thistoryChats.splice(existingIndex, 1);\n\t\t\t\t\t\thistoryChats.unshift(newChat);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// 添加新对话到最前面\n\t\t\t\t\thistoryChats.unshift(newChat);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tuni.setStorageSync('historyChats', historyChats);\n\t\t\t\tconsole.log('对话已保存:', newChat, '有新消息:', hasNewMessages);\n\t\t\t},\n\t\t\t\n\t\t\t// 显示图片选择选项\n\t\t\tshowImageOptions() {\n\t\t\t\tuni.showActionSheet({\n\t\t\t\t\titemList: ['拍照', '从相册选择'],\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tif (res.tapIndex === 0) {\n\t\t\t\t\t\t\tthis.takePhoto();\n\t\t\t\t\t\t} else if (res.tapIndex === 1) {\n\t\t\t\t\t\t\tthis.chooseImage();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t// 拍照\n\t\t\ttakePhoto() {\n\t\t\t\tuni.chooseImage({\n\t\t\t\t\tcount: 1,\n\t\t\t\t\tsourceType: ['camera'],\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tthis.handleImageSelected(res.tempFilePaths[0]);\n\t\t\t\t\t},\n\t\t\t\t\tfail: (err) => {\n\t\t\t\t\t\tconsole.log('拍照失败:', err);\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '拍照失败',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t// 从相册选择图片\n\t\t\tchooseImage() {\n\t\t\t\tuni.chooseImage({\n\t\t\t\t\tcount: 1,\n\t\t\t\t\tsourceType: ['album'],\n\t\t\t\t\tsuccess: (res) => {\n\t\t\t\t\t\tthis.handleImageSelected(res.tempFilePaths[0]);\n\t\t\t\t\t},\n\t\t\t\t\tfail: (err) => {\n\t\t\t\t\t\tconsole.log('选择图片失败:', err);\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '选择图片失败',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t// 处理选中的图片\n\t\t\thandleImageSelected(imagePath) {\n\t\t\t\t// 添加用户图片消息\n\t\t\t\tthis.addMessage({\n\t\t\t\t\ttype: 'user',\n\t\t\t\t\tcontent: '[图片]',\n\t\t\t\t\ttime: this.getCurrentTime(),\n\t\t\t\t\timage: imagePath\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// 显示加载状态\n\t\t\t\tthis.isLoading = true;\n\t\t\t\t\n\t\t\t\t// 模拟AI识别回复\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.getImageAnalysis(imagePath);\n\t\t\t\t}, 1500);\n\t\t\t},\n\t\t\t\n\t\t\t// 获取图片分析结果\n\t\t\tgetImageAnalysis(imagePath) {\n\t\t\t\t// 这里应该调用真实的AI图像识别API\n\t\t\t\t// 目前使用模拟回复\n\t\t\t\tconst responses = [\n\t\t\t\t\t'根据图片分析，这可能是某种害虫。建议您采取相应的防治措施。',\n\t\t\t\t\t'图片中的害虫特征明显，建议使用专业杀虫剂进行处理。',\n\t\t\t\t\t'这看起来像是常见的农业害虫，需要及时防治以避免扩散。'\n\t\t\t\t];\n\t\t\t\t\n\t\t\t\tconst randomResponse = responses[Math.floor(Math.random() * responses.length)];\n\t\t\t\t\n\t\t\t\t// 添加AI回复\n\t\t\t\tthis.addMessage({\n\t\t\t\t\ttype: 'ai',\n\t\t\t\t\tcontent: randomResponse,\n\t\t\t\t\ttime: this.getCurrentTime()\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tthis.isLoading = false;\n\t\t\t\t\n\t\t\t\t// 保存对话到历史记录\n\t\t\t\tthis.saveCurrentChat();\n\t\t\t},\n\t\t\t\n\t\t\t// 发送消息\n\t\t\tsendMessage() {\n\t\t\t\tif (!this.inputMessage.trim() || this.isLoading) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 添加用户消息\n\t\t\t\tthis.addMessage({\n\t\t\t\t\ttype: 'user',\n\t\t\t\t\tcontent: this.inputMessage,\n\t\t\t\t\ttime: this.getCurrentTime()\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tconst userQuestion = this.inputMessage;\n\t\t\t\tthis.inputMessage = '';\n\t\t\t\t\n\t\t\t\t// 显示加载状态\n\t\t\t\tthis.isLoading = true;\n\t\t\t\t\n\t\t\t\t// 模拟AI回复（实际项目中应该调用真实的API）\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.getAIResponse(userQuestion);\n\t\t\t\t}, 1000);\n\t\t\t},\n\t\t\t\n\t\t\t// 获取AI回复\n\t\t\tgetAIResponse(question) {\n\t\t\t\t// 这里应该调用真实的AI API\n\t\t\t\t// 目前使用模拟回复\n\t\t\t\tlet response = '';\n\t\t\t\t\n\t\t\t\tif (question.includes('识别') || question.includes('害虫')) {\n\t\t\t\t\tresponse = '我可以帮您识别各种害虫。请上传害虫图片，我会为您分析害虫类型并提供防治建议。';\n\t\t\t\t} else if (question.includes('防治') || question.includes('处理')) {\n\t\t\t\t\tresponse = '针对不同害虫，我们有不同的防治方法。建议您先上传害虫图片进行识别，然后我会为您提供具体的防治方案。';\n\t\t\t\t} else if (question.includes('图片') || question.includes('上传')) {\n\t\t\t\t\tresponse = '您可以通过点击输入框旁边的加号按钮来上传害虫图片。支持拍照和从相册选择图片。';\n\t\t\t\t} else {\n\t\t\t\t\tresponse = '我是专业的害虫识别助手，可以帮您识别害虫、提供防治建议。请告诉我您需要什么帮助，或者上传害虫图片进行识别。';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 添加AI回复\n\t\t\t\tthis.addMessage({\n\t\t\t\t\ttype: 'ai',\n\t\t\t\t\tcontent: response,\n\t\t\t\t\ttime: this.getCurrentTime()\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tthis.isLoading = false;\n\t\t\t\t\n\t\t\t\t// 保存对话到历史记录（只有在有新消息时才更新）\n\t\t\t\tthis.saveCurrentChat();\n\t\t\t},\n\t\t\t\n\t\t\t// 添加消息到列表\n\t\t\taddMessage(message) {\n\t\t\t\tthis.messageList.push(message);\n\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t// 延迟滚动确保新消息完全渲染\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.scrollToBottom();\n\t\t\t\t\t}, 100);\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t// 滚动到底部\n\t\t\tscrollToBottom() {\n\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t// 使用scroll-into-view滚动到最后一个消息\n\t\t\t\t\tif (this.messageList.length > 0) {\n\t\t\t\t\t\tconst lastIndex = this.messageList.length - 1;\n\t\t\t\t\t\tthis.scrollIntoView = `msg-${lastIndex}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 如果没有消息，滚动到顶部\n\t\t\t\t\t\tthis.scrollTop = 0;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t// 获取当前时间\n\t\t\tgetCurrentTime() {\n\t\t\t\tconst now = new Date();\n\t\t\t\tconst hours = now.getHours().toString().padStart(2, '0');\n\t\t\t\tconst minutes = now.getMinutes().toString().padStart(2, '0');\n\t\t\t\treturn `${hours}:${minutes}`;\n\t\t\t},\n\t\t\t\n\t\t\t// 获取当前日期时间\n\t\t\tgetCurrentDateTime() {\n\t\t\t\tconst now = new Date();\n\t\t\t\tconst year = now.getFullYear();\n\t\t\t\tconst month = (now.getMonth() + 1).toString().padStart(2, '0');\n\t\t\t\tconst day = now.getDate().toString().padStart(2, '0');\n\t\t\t\tconst hours = now.getHours().toString().padStart(2, '0');\n\t\t\t\tconst minutes = now.getMinutes().toString().padStart(2, '0');\n\t\t\t\treturn `${year}-${month}-${day} ${hours}:${minutes}`;\n\t\t\t},\n\t\t\t\n\t\t\t// 搜索输入处理\n\t\t\tonSearchInput() {\n\t\t\t\tif (this.searchKeyword.trim()) {\n\t\t\t\t\tthis.performSearch();\n\t\t\t\t} else {\n\t\t\t\t\tthis.clearSearch();\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 执行搜索\n\t\t\tperformSearch() {\n\t\t\t\tif (!this.searchKeyword.trim()) {\n\t\t\t\t\tthis.clearSearch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst keyword = this.searchKeyword.toLowerCase();\n\t\t\t\tthis.searchResults = [];\n\t\t\t\t\n\t\t\t\tthis.messageList.forEach((message, index) => {\n\t\t\t\t\tif (message.content && message.content.toLowerCase().includes(keyword)) {\n\t\t\t\t\t\tthis.searchResults.push(index);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tif (this.searchResults.length > 0) {\n\t\t\t\t\t// 滚动到第一个搜索结果\n\t\t\t\t\tthis.scrollToMessage(this.searchResults[0]);\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: `找到 ${this.searchResults.length} 个结果`,\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '未找到相关内容',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t// 清除搜索\n\t\t\tclearSearch() {\n\t\t\t\tthis.searchKeyword = '';\n\t\t\t\tthis.searchResults = [];\n\t\t\t},\n\t\t\t\n\t\t\t// 检查消息是否高亮\n\t\t\tisMessageHighlighted(message) {\n\t\t\t\tif (!this.searchKeyword.trim()) return false;\n\t\t\t\tconst index = this.messageList.indexOf(message);\n\t\t\t\treturn this.searchResults.includes(index);\n\t\t\t},\n\t\t\t\n\t\t\t// 高亮搜索文本（已移除，改用CSS样式实现）\n\t\t\thighlightSearchText(text) {\n\t\t\t\treturn text; // 直接返回原文本，使用CSS样式实现高亮\n\t\t\t},\n\t\t\t\n\t\t\t// 滚动到指定消息\n\t\t\tscrollToMessage(index) {\n\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\tthis.scrollIntoView = `msg-${index}`;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style scoped>\n\t.chat-container {\n\t\theight: 100vh;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tbackground-color: #f5f5f5;\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t.header {\n\t\tbackground-color: #4CAF50;\n\t\tpadding: 20rpx 30rpx;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\tbox-shadow: 0 2rpx 10rpx rgba(0,0,0,0.1);\n\t}\n\t\n\t.header-left, .header-right {\n\t\twidth: 80rpx;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t}\n\t\n\t.header-center {\n\t\tflex: 1;\n\t\ttext-align: center;\n\t}\n\t\n\t.header-btn {\n\t\twidth: 60rpx;\n\t\theight: 60rpx;\n\t\tbackground: rgba(255,255,255,0.2);\n\t\tborder: none;\n\t\tborder-radius: 50%;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tcursor: pointer;\n\t\ttransition: all 0.3s ease;\n\t}\n\t\n\t.header-btn:active {\n\t\tbackground: rgba(255,255,255,0.3);\n\t\ttransform: scale(0.95);\n\t}\n\t\n\t.header-icon {\n\t\tcolor: white;\n\t\tfont-size: 28rpx;\n\t}\n\t\n\t.hamburger-icon {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tgap: 4rpx;\n\t}\n\t\n\t.line {\n\t\twidth: 24rpx;\n\t\theight: 3rpx;\n\t\tbackground-color: #333;\n\t\tborder-radius: 2rpx;\n\t}\n\t\n\t.title {\n\t\tcolor: white;\n\t\tfont-size: 36rpx;\n\t\tfont-weight: bold;\n\t}\n\t\n\t.search-container {\n\t\tbackground-color: white;\n\t\tpadding: 20rpx 30rpx;\n\t\tborder-bottom: 1rpx solid #e0e0e0;\n\t}\n\t\n\t.search-box {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tbackground-color: #f5f5f5;\n\t\tborder-radius: 25rpx;\n\t\tpadding: 15rpx 20rpx;\n\t\tposition: relative;\n\t}\n\t\n\t.search-icon {\n\t\tfont-size: 28rpx;\n\t\tmargin-right: 15rpx;\n\t\tcolor: #999;\n\t}\n\t\n\t.search-input {\n\t\tflex: 1;\n\t\tfont-size: 28rpx;\n\t\tbackground: transparent;\n\t\tborder: none;\n\t\toutline: none;\n\t}\n\t\n\t.clear-btn {\n\t\twidth: 40rpx;\n\t\theight: 40rpx;\n\t\tbackground-color: #ccc;\n\t\tborder-radius: 50%;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tmargin-left: 15rpx;\n\t}\n\t\n\t.clear-icon {\n\t\tcolor: white;\n\t\tfont-size: 24rpx;\n\t\tfont-weight: bold;\n\t}\n\t\n\t.chat-list {\n\t\tflex: 1;\n\t\tpadding: 20rpx;\n\t\toverflow-y: auto;\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t.welcome-container {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tmin-height: 60vh;\n\t\tpadding: 40rpx;\n\t}\n\t\n\t.welcome-content {\n\t\ttext-align: center;\n\t\tbackground: white;\n\t\tborder-radius: 20rpx;\n\t\tpadding: 60rpx 40rpx;\n\t\tbox-shadow: 0 4rpx 20rpx rgba(0,0,0,0.1);\n\t\tmax-width: 600rpx;\n\t}\n\t\n\t.welcome-title {\n\t\tfont-size: 36rpx;\n\t\tfont-weight: bold;\n\t\tcolor: #333;\n\t\tmargin-bottom: 20rpx;\n\t\tdisplay: block;\n\t}\n\t\n\t.welcome-subtitle {\n\t\tfont-size: 28rpx;\n\t\tcolor: #666;\n\t\tmargin-bottom: 40rpx;\n\t\tdisplay: block;\n\t}\n\t\n\t.welcome-features {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 20rpx;\n\t}\n\t\n\t.feature-item {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tpadding: 20rpx;\n\t\tbackground: #f8f8f8;\n\t\tborder-radius: 15rpx;\n\t}\n\t\n\t.feature-text {\n\t\tfont-size: 28rpx;\n\t\tcolor: #333;\n\t}\n\t\n\t.message-item {\n\t\tmargin-bottom: 30rpx;\n\t}\n\t\n\t.message-content {\n\t\tdisplay: flex;\n\t\talign-items: flex-start;\n\t}\n\t\n\t.user-message .message-content {\n\t\tflex-direction: row-reverse;\n\t}\n\t\n\t.avatar {\n\t\twidth: 80rpx;\n\t\theight: 80rpx;\n\t\tborder-radius: 50%;\n\t\toverflow: hidden;\n\t\tmargin: 0 20rpx;\n\t}\n\t\n\t.avatar-img {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\t\n\t.message-bubble {\n\t\tmax-width: 70%;\n\t\tpadding: 20rpx 30rpx;\n\t\tborder-radius: 20rpx;\n\t\tposition: relative;\n\t\tword-wrap: break-word;\n\t\tword-break: break-word;\n\t}\n\t\n\t.user-message .message-bubble {\n\t\tbackground-color: #4CAF50;\n\t\tcolor: white;\n\t\tborder-bottom-right-radius: 5rpx;\n\t}\n\t\n\t.ai-message .message-bubble {\n\t\tbackground-color: white;\n\t\tcolor: #333;\n\t\tborder-bottom-left-radius: 5rpx;\n\t\tbox-shadow: 0 2rpx 10rpx rgba(0,0,0,0.1);\n\t}\n\t\n\t.message-text {\n\t\tfont-size: 28rpx;\n\t\tline-height: 1.5;\n\t\tword-wrap: break-word;\n\t}\n\t\n\t.message-image {\n\t\tmax-width: 100%;\n\t\tmax-height: 400rpx;\n\t\tborder-radius: 10rpx;\n\t\tmargin-bottom: 10rpx;\n\t}\n\t\n\t.message-time {\n\t\tfont-size: 24rpx;\n\t\topacity: 0.7;\n\t\tmargin-top: 10rpx;\n\t\tdisplay: block;\n\t}\n\t\n\t.loading-message {\n\t\tmargin-bottom: 30rpx;\n\t}\n\t\n\t.typing-indicator {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tpadding: 10rpx 0;\n\t}\n\t\n\t.dot {\n\t\twidth: 8rpx;\n\t\theight: 8rpx;\n\t\tborder-radius: 50%;\n\t\tbackground-color: #999;\n\t\tmargin: 0 4rpx;\n\t\tanimation: typing 1.4s infinite ease-in-out;\n\t}\n\t\n\t.dot:nth-child(1) {\n\t\tanimation-delay: -0.32s;\n\t}\n\t\n\t.dot:nth-child(2) {\n\t\tanimation-delay: -0.16s;\n\t}\n\t\n\t@keyframes typing {\n\t\t0%, 80%, 100% {\n\t\t\ttransform: scale(0.8);\n\t\t\topacity: 0.5;\n\t\t}\n\t\t40% {\n\t\t\ttransform: scale(1);\n\t\t\topacity: 1;\n\t\t}\n\t}\n\t\n\t.input-area {\n\t\tbackground-color: white;\n\t\tpadding: 20rpx 30rpx;\n\t\tborder-top: 1rpx solid #e0e0e0;\n\t}\n\t\n\t.input-container {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\t\n\t.plus-btn {\n\t\twidth: 80rpx;\n\t\theight: 80rpx;\n\t\tborder-radius: 50%;\n\t\tbackground-color: white;\n\t\tborder: 2rpx solid #4CAF50;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tmargin-right: 20rpx;\n\t}\n\t\n\t.plus-btn[disabled] {\n\t\tbackground-color: #ccc;\n\t}\n\t\n\t.plus-icon {\n\t\tcolor: #4CAF50;\n\t\tfont-size: 40rpx;\n\t\tfont-weight: bold;\n\t}\n\t\n\t.message-input {\n\t\tflex: 1;\n\t\theight: 80rpx;\n\t\tpadding: 0 20rpx;\n\t\tborder: 1rpx solid #e0e0e0;\n\t\tborder-radius: 40rpx;\n\t\tfont-size: 28rpx;\n\t\tbackground-color: #f9f9f9;\n\t}\n\t\n\t.send-btn {\n\t\tmargin-left: 20rpx;\n\t\theight: 80rpx;\n\t\tline-height: 80rpx;\n\t\tpadding: 0 40rpx;\n\t\tbackground-color: #4CAF50;\n\t\tcolor: white;\n\t\tborder-radius: 40rpx;\n\t\tfont-size: 28rpx;\n\t\tborder: none;\n\t}\n\t\n\t.send-btn[disabled] {\n\t\tbackground-color: #ccc;\n\t\tcolor: #999;\n\t}\n\t\n\t.highlighted-message {\n\t\tbackground-color: rgba(255, 215, 0, 0.2);\n\t\tborder: 2rpx solid #ffd700;\n\t\tborder-radius: 10rpx;\n\t\tbox-shadow: 0 0 10rpx rgba(255, 215, 0, 0.3);\n\t}\n\t\n\t.highlighted-message .message-bubble {\n\t\tbackground-color: rgba(255, 215, 0, 0.1);\n\t}\n</style>\n\n","import MiniProgramPage from 'E:/anyused/empty/frontend/pages/chatAI/chatAI.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":"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"}