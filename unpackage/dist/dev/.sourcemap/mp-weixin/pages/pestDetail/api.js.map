{"version":3,"file":"api.js","sources":["pages/pestDetail/api.js"],"sourcesContent":["/**\r\n * 害虫详情API接口\r\n * 根据Vue文件需求编写\r\n */\r\n\r\n// 基础配置\r\nconst BASE_URL = 'http://192.168.241.56:5000'; // 替换为实际的API地址\r\nconst API_VERSION = 'api';\r\n\r\n/**\r\n * 获取图片URL\r\n * @param {String} imageName - 图片文件名\r\n * @returns {String} 返回完整的图片URL\r\n */\r\nexport const getImageUrl = (imageName) => {\r\n  if (!imageName) return '';\r\n  return `${BASE_URL}/${API_VERSION}/pest/images/${imageName}`;\r\n};\r\n\r\n/**\r\n * 获取害虫详细信息\r\n * @param {String} pestId - 害虫ID\r\n * @returns {Promise} 返回害虫详细信息\r\n */\r\nexport const getPestDetailInfo = (pestId) => {\r\n  return new Promise((resolve, reject) => {\r\n    uni.request({\r\n      url: `${BASE_URL}/${API_VERSION}/pest/${pestId}`,\r\n      method: 'GET',\r\n      header: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${uni.getStorageSync('token') || ''}`\r\n      },\r\n      success: (res) => {\r\n        if (res.statusCode === 200) {\r\n          // 直接返回后端数据\r\n          resolve(res.data.data);\r\n        } else {\r\n          reject(new Error(res.data.message || '获取害虫详情失败'));\r\n        }\r\n      },\r\n      fail: (err) => {\r\n        reject(new Error('网络请求失败'));\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * 获取害虫收藏状态\r\n * @param {String} pestName - 害虫名称\r\n * @returns {Boolean} 返回收藏状态\r\n */\r\nexport const getPestFavoriteStatus = (pestName) => {\r\n  const favorites = uni.getStorageSync('pest_favorites') || [];\r\n  return favorites.some(item => item.name === pestName);\r\n};\r\n\r\n/**\r\n * 切换害虫收藏状态\r\n * @param {Object} pestInfo - 害虫信息\r\n * @param {Boolean} isFavorite - 是否收藏\r\n * @returns {Promise} 返回操作结果\r\n */\r\nexport const togglePestFavorite = (pestInfo, isFavorite) => {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      let favorites = uni.getStorageSync('pest_favorites') || [];\r\n      \r\n      if (isFavorite) {\r\n        const favoriteItem = {\r\n          name: pestInfo.name,\r\n          image: pestInfo.image,\r\n          timestamp: Date.now()\r\n        };\r\n        const existingIndex = favorites.findIndex(item => item.name === pestInfo.name);\r\n        if (existingIndex === -1) {\r\n          favorites.push(favoriteItem);\r\n        }\r\n      } else {\r\n        favorites = favorites.filter(item => item.name !== pestInfo.name);\r\n      }\r\n      \r\n      uni.setStorageSync('pest_favorites', favorites);\r\n      resolve({ success: true, favorites });\r\n    } catch (error) {\r\n      reject(new Error('操作收藏失败'));\r\n    }\r\n  });\r\n};\r\n\r\nexport default {\r\n  getPestDetailInfo,\r\n  getPestFavoriteStatus,\r\n  togglePestFavorite\r\n}; "],"names":["uni"],"mappings":";;AAMA,MAAM,WAAW;AACjB,MAAM,cAAc;AAOR,MAAC,cAAc,CAAC,cAAc;AACxC,MAAI,CAAC;AAAW,WAAO;AACvB,SAAO,GAAG,QAAQ,IAAI,WAAW,gBAAgB,SAAS;AAC5D;AAOY,MAAC,oBAAoB,CAAC,WAAW;AAC3C,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtCA,kBAAAA,MAAI,QAAQ;AAAA,MACV,KAAK,GAAG,QAAQ,IAAI,WAAW,SAAS,MAAM;AAAA,MAC9C,QAAQ;AAAA,MACR,QAAQ;AAAA,QACN,gBAAgB;AAAA,QAChB,iBAAiB,UAAUA,cAAG,MAAC,eAAe,OAAO,KAAK,EAAE;AAAA,MAC7D;AAAA,MACD,SAAS,CAAC,QAAQ;AAChB,YAAI,IAAI,eAAe,KAAK;AAE1B,kBAAQ,IAAI,KAAK,IAAI;AAAA,QAC/B,OAAe;AACL,iBAAO,IAAI,MAAM,IAAI,KAAK,WAAW,UAAU,CAAC;AAAA,QACjD;AAAA,MACF;AAAA,MACD,MAAM,CAAC,QAAQ;AACb,eAAO,IAAI,MAAM,QAAQ,CAAC;AAAA,MAC3B;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AACH;;;"}