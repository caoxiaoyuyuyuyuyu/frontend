{"version":3,"file":"record.js","sources":["pages/profile/record.vue","../../HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvcHJvZmlsZS9yZWNvcmQudnVl"],"sourcesContent":["<template>\n  <view class=\"record-container\">\n    <!-- 搜索和筛选 -->\n    <view class=\"search-filter\">\n      <input class=\"search-input\" v-model=\"searchText\" placeholder=\"搜索害虫名称\" @input=\"filterRecords\" />\n      <picker :range=\"timeOptions\" :value=\"timeFilter\" @change=\"onTimeChange\">\n        <view class=\"filter-btn\">{{ timeOptions[timeFilter] }}</view>\n      </picker>\n      <picker :range=\"confidenceOptions\" :value=\"confidenceFilter\" @change=\"onConfidenceChange\">\n        <view class=\"filter-btn\">{{ confidenceOptions[confidenceFilter] }}</view>\n      </picker>\n    </view>\n\n    <!-- 数据统计 -->\n    <view class=\"stat-section\">\n      <text>本月识别：{{ stat.count }} 次，常见类型：{{ stat.topType }}</text>\n    </view>\n\n    <!-- 识别记录列表 -->\n    <view v-if=\"filteredRecords.length === 0\" class=\"empty-tip\">暂无识别记录</view>\n    <view v-for=\"item in filteredRecords\" :key=\"item.id\" class=\"record-row\">\n      <image :src=\"item.image\" class=\"record-img\" />\n      <view class=\"record-info\">\n        <view class=\"record-title\">{{ item.name }}</view>\n        <view class=\"record-meta\">\n          <text>{{ item.time }}</text>\n          <text class=\"confidence\">{{ item.confidence }}匹配</text>\n        </view>\n        <view class=\"record-actions\">\n          <button @click=\"viewDetail(item)\">详情</button>\n          <button @click=\"deleteRecord(item)\">删除</button>\n        </view>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      records: [\n        // 示例数据，实际应从后端获取\n        {\n          id: 1,\n          image: '/static/pest1.jpg',\n          name: '棉铃虫',\n          time: '2024/07/15 14:30:00',\n          confidence: '92%',\n          type: '蛾类'\n        },\n        // ...\n      ],\n      searchText: '',\n      timeOptions: ['全部', '最近一周', '最近一个月'],\n      timeFilter: 0,\n      confidenceOptions: ['默认排序', '高可信度优先', '低可信度优先'],\n      confidenceFilter: 0,\n      filteredRecords: [],\n      stat: {\n        count: 0,\n        topType: ''\n      }\n    }\n  },\n  created() {\n    this.filterRecords()\n    this.calcStat()\n  },\n  methods: {\n    fixDateStr(str) {\n      // \"2024-07-15 14:30\" => \"2024/07/15 14:30:00\"\n      if (!str) return ''\n      return str.replace(/-/g, '/').replace(/(\\d{2}:\\d{2})$/, '$1:00')\n    },\n    filterRecords() {\n      // 搜索和筛选逻辑\n      let list = this.records\n      if (this.searchText) {\n        list = list.filter(r => r.name.includes(this.searchText))\n      }\n      // 时间筛选\n      if (this.timeFilter === 1) {\n        // 最近一周\n        const weekAgo = Date.now() - 7 * 24 * 60 * 60 * 1000\n        list = list.filter(r => new Date(this.fixDateStr(r.time)).getTime() > weekAgo)\n      } else if (this.timeFilter === 2) {\n        // 最近一个月\n        const monthAgo = Date.now() - 30 * 24 * 60 * 60 * 1000\n        list = list.filter(r => new Date(this.fixDateStr(r.time)).getTime() > monthAgo)\n      }\n      // 可信度排序\n      if (this.confidenceFilter === 1) {\n        list = list.slice().sort((a, b) => parseInt(b.confidence) - parseInt(a.confidence))\n      } else if (this.confidenceFilter === 2) {\n        list = list.slice().sort((a, b) => parseInt(a.confidence) - parseInt(b.confidence))\n      }\n      this.filteredRecords = list\n    },\n    onTimeChange(e) {\n      this.timeFilter = e.detail.value\n      this.filterRecords()\n    },\n    onConfidenceChange(e) {\n      this.confidenceFilter = e.detail.value\n      this.filterRecords()\n    },\n    viewDetail(item) {\n      uni.navigateTo({ url: `/pages/profile/recordDetail?id=${item.id}` })\n    },\n    deleteRecord(item) {\n      uni.showModal({\n        title: '确认删除',\n        content: '确定要删除该识别记录吗？',\n        success: (res) => {\n          if (res.confirm) {\n            this.records = this.records.filter(r => r.id !== item.id)\n            this.filterRecords()\n            this.calcStat()\n          }\n        }\n      })\n    },\n    calcStat() {\n      // 统计本月识别次数和常见类型\n      const now = new Date()\n      const month = now.getMonth() + 1\n      const monthRecords = this.records.filter(r => new Date(this.fixDateStr(r.time)).getMonth() + 1 === month)\n      this.stat.count = monthRecords.length\n      // 统计最多的type\n      const typeCount = {}\n      monthRecords.forEach(r => {\n        typeCount[r.type] = (typeCount[r.type] || 0) + 1\n      })\n      let topType = ''\n      let max = 0\n      for (const k in typeCount) {\n        if (typeCount[k] > max) {\n          max = typeCount[k]\n          topType = k\n        }\n      }\n      this.stat.topType = topType ? `${Math.round((max / (monthRecords.length || 1)) * 100)}%是${topType}` : '无'\n    }\n  }\n}\n</script>\n\n<style scoped>\n.record-container {\n  padding: 32rpx 24rpx 32rpx 24rpx;\n  background: #f8f9fb;\n  min-height: 100vh;\n}\n.search-filter {\n  display: flex;\n  align-items: center;\n  margin-bottom: 18rpx;\n}\n.search-input {\n  flex: 1;\n  font-size: 26rpx;\n  border: 1rpx solid #eee;\n  border-radius: 8rpx;\n  padding: 8rpx 12rpx;\n  background: #fafafa;\n  margin-right: 12rpx;\n}\n.filter-btn {\n  font-size: 24rpx;\n  color: #2d2e3a;\n  background: #eee;\n  border-radius: 8rpx;\n  padding: 8rpx 16rpx;\n  margin-right: 8rpx;\n}\n.stat-section {\n  font-size: 24rpx;\n  color: #888;\n  margin-bottom: 18rpx;\n}\n.empty-tip {\n  color: #bbb;\n  font-size: 24rpx;\n  text-align: center;\n  margin: 32rpx 0;\n}\n.record-row {\n  display: flex;\n  align-items: center;\n  border-bottom: 1rpx solid #f0f0f0;\n  padding: 18rpx 0;\n}\n.record-img {\n  width: 100rpx;\n  height: 100rpx;\n  border-radius: 12rpx;\n  margin-right: 18rpx;\n  object-fit: cover;\n}\n.record-info {\n  flex: 1;\n}\n.record-title {\n  font-size: 28rpx;\n  color: #222;\n  font-weight: bold;\n}\n.record-meta {\n  font-size: 24rpx;\n  color: #888;\n  margin: 4rpx 0;\n  display: flex;\n  justify-content: space-between;\n}\n.confidence {\n  color: #4caf50;\n}\n.record-actions {\n  display: flex;\n  gap: 12rpx;\n  margin-top: 8rpx;\n}\n.record-actions button {\n  font-size: 22rpx;\n  padding: 4rpx 16rpx;\n  border-radius: 8rpx;\n  background: #e5d3b6;\n  color: #7d5c1e;\n  border: none;\n}\n</style>","import MiniProgramPage from 'C:/AI/FPDIS/frontend/pages/profile/record.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":"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"}